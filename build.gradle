apply from: "$rootDir/gradle/envConfig.gradle"
apply from: "$rootDir/gradle/versioning.gradle"
apply plugin: 'sonar-runner'

sonarRunner {
    sonarProperties {
        property 'sonar.projectName', 'todo'
        property 'sonar.projectDescription', 'A task management application'
		
		//Configuration for the MySql sonar database
		property "sonar.host.url", "http://localhost:9000"
		property "sonar.jdbc.url", "jdbc:mysql://localhost/sonar"
		property "sonar.jdbc.driverClassName", "com.mysql.jdbc.Driver"
		property "sonar.jdbc.username", "sonar"
		property "sonar.jdbc.password", "sonar"
    }
}

allprojects {
    apply plugin: 'idea'
	apply plugin: 'artifactory'
    group = 'com.manning.gia'
	version = project.version
	status = 'integration'
	
}

subprojects {
    apply plugin: 'java'
    apply from: "$rootDir/gradle/jacoco.gradle"

    repositories {
        mavenCentral()
    }

    test {
        reports.junitXml.destination = file("$reports.junitXml.destination/unit")
    }

    sonarRunner {
        sonarProperties {
            property 'sonar.sourceEncoding', 'UTF-8'
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.8'
}

artifactory {
	contextUrl = 'http://localhost:8081/artifactory'   //The base Artifactory URL if not overridden by the publisher/resolver
	
	publish {
			  //A closure defining publishing information
			  repository {
				repoKey = 'bham-local'   //The Artifactory repository key to publish to // or  integration-libs
				username = "deployer"          //The publisher user name
				password = "{DESede}v0N2P/mQ0/Xql0Hc0Cbm/Q=="       //The publisher password
			  }
			  defaults {
				  publishConfigs('archives', 'published')
				  properties = ['build.status': "integration"]
			  }
	}
	
	resolve {
			  repository {
				repoKey = 'bham'  //The Artifactory (preferably virtual) repository key to resolve from //or 'gradle' 'libs-releases'
				username = "deployer"
				password = "{DESede}v0N2P/mQ0/Xql0Hc0Cbm/Q=="
			  }
	}
  }



